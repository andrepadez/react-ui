{"version":3,"sources":["../../src/Sortable/index.js","Examples/Sortable/index.js","App.js","index.js"],"names":["Sortable","children","onReorder","container","dragging","dragStart","ev","dragEnd","order","Array","elem","getAfterElement","y","box","element","offset","closest","Number","NEGATIVE_INFINITY","ref","className","onDragOver","afterElement","orderKey","child","SortableItem","onDragStart","onDragEnd","data-key","draggable","ITEMS","label","id","SortableExample","console","log","map","item","key","App","ReactDOM","render","document","getElementById"],"mappings":"sQAEMA,G,WAAW,SAAC,GAA4B,IAA1BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACxBC,EAAJ,KACIC,EAAJ,KAEMC,EAAY,SAACC,IACjBF,EAAWE,EAAXF,QACAA,2BAGIG,EAAU,SAACD,GACfF,+BACAA,OACA,IAAMI,EAAQC,MAAA,KAAWN,mBAAX,wBACZ,mBAAUO,UAAV,OAEFR,GAAaA,EAAbA,IAaIS,EAAkB,SAACC,GAKvB,OAJcH,WACZN,mBADF,kCAIO,QACL,cACE,IAAMU,EAAMC,EAAZ,wBACMC,EAASH,EAAIC,EAAJD,IAAcC,SAA7B,EACA,OAAIE,KAAcA,EAASC,EAA3B,OACS,CAAED,OAAF,EAAUD,WAEjB,IAGJ,CACEC,OAAQE,OAAOC,oBAXnB,SAgBF,OACE,yBACEC,IAAK,mBAAUhB,EAAV,GACLiB,UAFF,qBAGEC,WAnCa,SAACf,GAChBA,mBACA,IAAMgB,EAAeX,EAAgBL,EAArC,SACA,EACEH,oBAEAA,mBA+BC,oBAA6B,mBAC5B,qBACEoB,SAAUC,EADZ,IAEEnB,UAFF,EAGEE,QAASA,GAJiB,SAa9BkB,EAAe,SAAC,GAA+C,IAA7CxB,EAA6C,EAA7CA,SAAUsB,EAAmC,EAAnCA,SAAUlB,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,QACrD,OACE,yBACEa,UADF,gBAEEM,YAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,WAAS,GANb,IChDIC,EAAQ,CACZ,CAAEC,MAAO,SAAUC,GAAI,UACvB,CAAED,MAAO,SAAUC,GAAI,SACvB,CAAED,MAAO,SAAUC,GAAI,UACvB,CAAED,MAAO,SAAUC,GAAI,WACvB,CAAED,MAAO,SAAUC,GAAI,WACvB,CAAED,MAAO,SAAUC,GAAI,aAGVC,EA3BS,WAItB,OACE,yBAAKb,UAAU,aACb,wCACA,kBAAC,EAAD,CAAUlB,UANI,SAACM,GACjB0B,QAAQC,IAAI,YAAa3B,KAMpBsB,EAAMM,KAAI,SAACC,GAAD,OACT,yBAAKC,IAAKD,EAAKL,GAAIZ,UAAU,QAC1BiB,EAAKN,aCPHQ,EAJH,WACV,OAAO,kBAAC,EAAD,OCCTC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.251d1ff1.chunk.js","sourcesContent":["import React from 'react'\n\nconst Sortable = ({ children, onReorder }) => {\n  let container = null\n  let dragging = null\n\n  const dragStart = (ev) => {\n    dragging = ev.target\n    dragging.classList.add('dragging')\n  }\n\n  const dragEnd = (ev) => {\n    dragging.classList.remove('dragging')\n    dragging = null\n    const order = Array.from(container.querySelectorAll('.sortable-item')).map(\n      (elem) => elem.dataset.key\n    )\n    onReorder && onReorder(order)\n  }\n\n  const dragOver = (ev) => {\n    ev.preventDefault()\n    const afterElement = getAfterElement(ev.clientY)\n    if (afterElement) {\n      container.insertBefore(dragging, afterElement)\n    } else {\n      container.appendChild(dragging)\n    }\n  }\n\n  const getAfterElement = (y) => {\n    const items = Array.from(\n      container.querySelectorAll('.sortable-item:not(.dragging)')\n    )\n\n    return items.reduce(\n      (closest, element) => {\n        const box = element.getBoundingClientRect()\n        const offset = y - box.top - box.height / 2\n        if (offset < 0 && offset > closest.offset) {\n          return { offset, element }\n        } else {\n          return closest\n        }\n      },\n      {\n        offset: Number.NEGATIVE_INFINITY\n      }\n    ).element\n  }\n\n  return (\n    <div\n      ref={(ref) => (container = ref)}\n      className='sortable-container'\n      onDragOver={dragOver}\n    >\n      {React.Children.map(children, (child) => (\n        <SortableItem\n          orderKey={child.key}\n          dragStart={dragStart}\n          dragEnd={dragEnd}\n        >\n          {child}\n        </SortableItem>\n      ))}\n    </div>\n  )\n}\n\nconst SortableItem = ({ children, orderKey, dragStart, dragEnd }) => {\n  return (\n    <div\n      className='sortable-item'\n      onDragStart={dragStart}\n      onDragEnd={dragEnd}\n      data-key={orderKey}\n      draggable\n    >\n      {children}\n    </div>\n  )\n}\n\nexport { Sortable }\n","import React from 'react'\nimport './sortable.scss'\n\nimport { Sortable } from 'react-ui'\n\nconst SortableExample = () => {\n  const onReorder = (order) => {\n    console.log('onReorder', order)\n  }\n  return (\n    <div className='container'>\n      <h1>Sortable</h1>\n      <Sortable onReorder={onReorder}>\n        {ITEMS.map((item) => (\n          <div key={item.id} className='item'>\n            {item.label}\n          </div>\n        ))}\n      </Sortable>\n    </div>\n  )\n}\n\nconst ITEMS = [\n  { label: 'Item 1', id: '322342' },\n  { label: 'Item 2', id: '23423' },\n  { label: 'Item 3', id: '345345' },\n  { label: 'Item 4', id: '3242342' },\n  { label: 'Item 5', id: '8687686' },\n  { label: 'Item 6', id: '67576576' }\n]\n\nexport default SortableExample\n","import React from 'react'\nimport 'react-ui/dist/index.css'\nimport Sortable from './Examples/Sortable'\n\nconst App = () => {\n  return <Sortable />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}