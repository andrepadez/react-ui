{"version":3,"sources":["../../src/utils/dragdropmobile.js","../../src/Components/Sortable/index.js","../../src/Components/Accordion/index.js","Examples/Sortable/index.js","Examples/Accordion/index.js","App.js","index.js"],"names":["DragDropTouch_1","DataTransfer","this","Object","get","set","enumerable","configurable","type","_data","value","img","offsetX","offsetY","ddt","DragDropTouch","x","y","Error","supportsPassive","document","d","ts","_touchstart","bind","tm","_touchmove","te","_touchend","opt","passive","capture","e","_this","_shouldHandle","Date","_dispatchEvent","src","_closestDraggable","_getPoint","setTimeout","_shouldCancelPressHoldMove","_shouldHandleMove","_shouldHandlePressHoldMove","target","_getTarget","_dragSource","_shouldStartDragging","_getDelta","delta","clearInterval","page","clientY","p","Math","_ptDown","pt","el","computedStyle","window","_imgCustom","_img","style","left","rc","top","s","dst","props","i","att","cSrc","cDst","cs","key","evt","t","split","Sortable","children","onReorder","container","dragging","currentOrder","dragStart","ev","items","Array","elem","dragEnd","newOrder","getAfterElement","box","element","offset","closest","Number","NEGATIVE_INFINITY","ref","className","onDragOver","afterElement","orderKey","child","SortableItem","onDragStart","onDragEnd","onTouchStart","onTouchEnd","data-key","draggable","Accordion","multi","useState","active","setActive","closed","idx","AccordionItem","title","open","setOpen","originalHeight","useRef","contentDiv","useEffect","contentStyle","itemStyle","visibility","onClick","ITEMS","label","id","SortableExample","order","console","log","map","item","AccordionExample","arrow","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d37aa239.chunk.js","sourcesContent":[";(function (DragDropTouch_1) {\n  'use strict'\n  /**\n   * Object used to hold the data that is being dragged during drag and drop operations.\n   *\n   * It may hold one or more data items of different types. For more information about\n   * drag and drop operations and data transfer objects, see\n   * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\n   *\n   * This object is created automatically by the @see:DragDropTouch singleton and is\n   * accessible through the @see:dataTransfer property of all drag events.\n   */\n  const DataTransfer = (function () {\n    function DataTransfer () {\n      this._dropEffect = 'move'\n      this._effectAllowed = 'all'\n      this._data = {}\n    }\n    Object.defineProperty(DataTransfer.prototype, 'dropEffect', {\n      /**\n       * Gets or sets the type of drag-and-drop operation currently selected.\n       * The value must be 'none',  'copy',  'link', or 'move'.\n       */\n      get: function () {\n        return this._dropEffect\n      },\n      set: function (value) {\n        this._dropEffect = value\n      },\n      enumerable: true,\n      configurable: true\n    })\n    Object.defineProperty(DataTransfer.prototype, 'effectAllowed', {\n      /**\n       * Gets or sets the types of operations that are possible.\n       * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\n       * 'linkMove', 'move', 'all' or 'uninitialized'.\n       */\n      get: function () {\n        return this._effectAllowed\n      },\n      set: function (value) {\n        this._effectAllowed = value\n      },\n      enumerable: true,\n      configurable: true\n    })\n    Object.defineProperty(DataTransfer.prototype, 'types', {\n      /**\n       * Gets an array of strings giving the formats that were set in the @see:dragstart event.\n       */\n      get: function () {\n        return Object.keys(this._data)\n      },\n      enumerable: true,\n      configurable: true\n    })\n    /**\n     * Removes the data associated with a given type.\n     *\n     * The type argument is optional. If the type is empty or not specified, the data\n     * associated with all types is removed. If data for the specified type does not exist,\n     * or the data transfer contains no data, this method will have no effect.\n     *\n     * @param type Type of data to remove.\n     */\n    DataTransfer.prototype.clearData = function (type) {\n      if (type != null) {\n        delete this._data[type]\n      } else {\n        this._data = null\n      }\n    }\n    /**\n     * Retrieves the data for a given type, or an empty string if data for that type does\n     * not exist or the data transfer contains no data.\n     *\n     * @param type Type of data to retrieve.\n     */\n    DataTransfer.prototype.getData = function (type) {\n      return this._data[type] || ''\n    }\n    /**\n     * Set the data for a given type.\n     *\n     * For a list of recommended drag types, please see\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\n     *\n     * @param type Type of data to add.\n     * @param value Data to add.\n     */\n    DataTransfer.prototype.setData = function (type, value) {\n      this._data[type] = value\n    }\n    /**\n     * Set the image to be used for dragging if a custom one is desired.\n     *\n     * @param img An image element to use as the drag feedback image.\n     * @param offsetX The horizontal offset within the image.\n     * @param offsetY The vertical offset within the image.\n     */\n    DataTransfer.prototype.setDragImage = function (img, offsetX, offsetY) {\n      const ddt = DragDropTouch._instance\n      ddt._imgCustom = img\n      ddt._imgOffset = { x: offsetX, y: offsetY }\n    }\n    return DataTransfer\n  })()\n  DragDropTouch_1.DataTransfer = DataTransfer\n  /**\n   * Defines a class that adds support for touch-based HTML5 drag/drop operations.\n   *\n   * The @see:DragDropTouch class listens to touch events and raises the\n   * appropriate HTML5 drag/drop events as if the events had been caused\n   * by mouse actions.\n   *\n   * The purpose of this class is to enable using existing, standard HTML5\n   * drag/drop code on mobile devices running IOS or Android.\n   *\n   * To use, include the DragDropTouch.js file on the page. The class will\n   * automatically start monitoring touch events and will raise the HTML5\n   * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\n   * should be handled by the application.\n   *\n   * For details and examples on HTML drag and drop, see\n   * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\n   */\n  const DragDropTouch = (function () {\n    /**\n     * Initializes the single instance of the @see:DragDropTouch class.\n     */\n    function DragDropTouch () {\n      this._lastClick = 0\n      // enforce singleton pattern\n      if (DragDropTouch._instance) {\n        throw new Error('DragDropTouch instance already created.')\n      }\n      // detect passive event support\n      // https://github.com/Modernizr/Modernizr/issues/1894\n      let supportsPassive = false\n      document.addEventListener('test', function () {}, {\n        get passive () {\n          supportsPassive = true\n          return true\n        }\n      })\n      // listen to touch events\n      if ('ontouchstart' in document) {\n        const d = document\n        const ts = this._touchstart.bind(this)\n        const tm = this._touchmove.bind(this)\n        const te = this._touchend.bind(this)\n        const opt = supportsPassive ? { passive: false, capture: false } : false\n        d.addEventListener('touchstart', ts, opt)\n        d.addEventListener('touchmove', tm, opt)\n        d.addEventListener('touchend', te)\n        d.addEventListener('touchcancel', te)\n      }\n    }\n    /**\n     * Gets a reference to the @see:DragDropTouch singleton.\n     */\n    DragDropTouch.getInstance = function () {\n      return DragDropTouch._instance\n    }\n    // ** event handlers\n    DragDropTouch.prototype._touchstart = function (e) {\n      const _this = this\n      if (this._shouldHandle(e)) {\n        // raise double-click and prevent zooming\n        if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\n          if (this._dispatchEvent(e, 'dblclick', e.target)) {\n            e.preventDefault()\n            this._reset()\n            return\n          }\n        }\n        // clear all variables\n        this._reset()\n        // get nearest draggable element\n        const src = this._closestDraggable(e.target)\n        if (src) {\n          // give caller a chance to handle the hover/move events\n          if (!this._dispatchEvent(e, 'mousemove', e.target) && !this._dispatchEvent(e, 'mousedown', e.target)) {\n            // get ready to start dragging\n            this._dragSource = src\n            this._ptDown = this._getPoint(e)\n            this._lastTouch = e\n            e.preventDefault()\n            // show context menu if the user hasn't started dragging after a while\n            setTimeout(function () {\n              if (_this._dragSource === src && !_this._img) {\n                if (_this._dispatchEvent(e, 'contextmenu', src)) {\n                  _this._reset()\n                }\n              }\n            }, DragDropTouch._CTXMENU)\n            if (DragDropTouch._ISPRESSHOLDMODE) {\n              this._pressHoldInterval = setTimeout(function () {\n                _this._isDragEnabled = true\n                _this._touchmove(e)\n              }, DragDropTouch._PRESSHOLDAWAIT)\n            }\n          }\n        }\n      }\n    }\n    DragDropTouch.prototype._touchmove = function (e) {\n      if (this._shouldCancelPressHoldMove(e)) {\n        this._reset()\n        return\n      }\n      if (this._shouldHandleMove(e) || this._shouldHandlePressHoldMove(e)) {\n        // see if target wants to handle move\n        const target = this._getTarget(e)\n        if (this._dispatchEvent(e, 'mousemove', target)) {\n          this._lastTouch = e\n          e.preventDefault()\n          return\n        }\n        // start dragging\n        if (this._dragSource && !this._img && this._shouldStartDragging(e)) {\n          this._dispatchEvent(e, 'dragstart', this._dragSource)\n          this._createImage(e)\n          this._dispatchEvent(e, 'dragenter', target)\n        }\n        // continue dragging\n        if (this._img) {\n          this._lastTouch = e\n          e.preventDefault() // prevent scrolling\n          if (target !== this._lastTarget) {\n            this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget)\n            this._dispatchEvent(e, 'dragenter', target)\n            this._lastTarget = target\n          }\n          this._moveImage(e)\n          this._isDropZone = this._dispatchEvent(e, 'dragover', target)\n        }\n      }\n    }\n    DragDropTouch.prototype._touchend = function (e) {\n      if (this._shouldHandle(e)) {\n        // see if target wants to handle up\n        if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\n          e.preventDefault()\n          return\n        }\n        // user clicked the element but didn't drag, so clear the source and simulate a click\n        if (!this._img) {\n          this._dragSource = null\n          this._dispatchEvent(this._lastTouch, 'click', e.target)\n          this._lastClick = Date.now()\n        }\n        // finish dragging\n        this._destroyImage()\n        if (this._dragSource) {\n          if (e.type.indexOf('cancel') < 0 && this._isDropZone) {\n            this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget)\n          }\n          this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource)\n          this._reset()\n        }\n      }\n    }\n    // ** utilities\n    // ignore events that have been handled or that involve more than one touch\n    DragDropTouch.prototype._shouldHandle = function (e) {\n      return e && !e.defaultPrevented && e.touches && e.touches.length < 2\n    }\n\n    // use regular condition outside of press & hold mode\n    DragDropTouch.prototype._shouldHandleMove = function (e) {\n      return !DragDropTouch._ISPRESSHOLDMODE && this._shouldHandle(e)\n    }\n\n    // allow to handle moves that involve many touches for press & hold\n    DragDropTouch.prototype._shouldHandlePressHoldMove = function (e) {\n      return DragDropTouch._ISPRESSHOLDMODE && this._isDragEnabled && e && e.touches && e.touches.length\n    }\n\n    // reset data if user drags without pressing & holding\n    DragDropTouch.prototype._shouldCancelPressHoldMove = function (e) {\n      return (\n        DragDropTouch._ISPRESSHOLDMODE && !this._isDragEnabled && this._getDelta(e) > DragDropTouch._PRESSHOLDMARGIN\n      )\n    }\n\n    // start dragging when specified delta is detected\n    DragDropTouch.prototype._shouldStartDragging = function (e) {\n      const delta = this._getDelta(e)\n      return (\n        delta > DragDropTouch._THRESHOLD ||\n        (DragDropTouch._ISPRESSHOLDMODE && delta >= DragDropTouch._PRESSHOLDTHRESHOLD)\n      )\n    }\n\n    // clear all members\n    DragDropTouch.prototype._reset = function () {\n      this._destroyImage()\n      this._dragSource = null\n      this._lastTouch = null\n      this._lastTarget = null\n      this._ptDown = null\n      this._isDragEnabled = false\n      this._isDropZone = false\n      this._dataTransfer = new DataTransfer()\n      clearInterval(this._pressHoldInterval)\n    }\n    // get point for a touch event\n    DragDropTouch.prototype._getPoint = function (e, page) {\n      if (e && e.touches) {\n        e = e.touches[0]\n      }\n      return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY }\n    }\n    // get distance between the current touch event and the first one\n    DragDropTouch.prototype._getDelta = function (e) {\n      if (DragDropTouch._ISPRESSHOLDMODE && !this._ptDown) {\n        return 0\n      }\n      const p = this._getPoint(e)\n      return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y)\n    }\n    // get the element at a given touch event\n    DragDropTouch.prototype._getTarget = function (e) {\n      const pt = this._getPoint(e)\n      let el = document.elementFromPoint(pt.x, pt.y)\n      const computedStyle = window.getComputedStyle(el)\n      while (el && computedStyle.pointerEvents === 'none') {\n        el = el.parentElement\n      }\n      return el\n    }\n    // create drag image from source element\n    DragDropTouch.prototype._createImage = function (e) {\n      // just in case...\n      if (this._img) {\n        this._destroyImage()\n      }\n      // create drag image from custom element or drag source\n      const src = this._imgCustom || this._dragSource\n      this._img = src.cloneNode(true)\n      this._copyStyle(src, this._img)\n      this._img.style.top = this._img.style.left = '-9999px'\n      // if creating from drag source, apply offset and opacity\n      if (!this._imgCustom) {\n        const rc = src.getBoundingClientRect()\n        const pt = this._getPoint(e)\n        this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top }\n        this._img.style.opacity = DragDropTouch._OPACITY.toString()\n      }\n      // add image to document\n      this._moveImage(e)\n      document.body.appendChild(this._img)\n    }\n    // dispose of drag image element\n    DragDropTouch.prototype._destroyImage = function () {\n      if (this._img && this._img.parentElement) {\n        this._img.parentElement.removeChild(this._img)\n      }\n      this._img = null\n      this._imgCustom = null\n    }\n    // move the drag image element\n    DragDropTouch.prototype._moveImage = function (e) {\n      const _this = this\n      window.requestAnimationFrame(function () {\n        if (_this._img) {\n          const pt = _this._getPoint(e, true)\n          const s = _this._img.style\n          s.position = 'absolute'\n          s.pointerEvents = 'none'\n          s.zIndex = '999999'\n          s.left = Math.round(pt.x - _this._imgOffset.x) + 'px'\n          s.top = Math.round(pt.y - _this._imgOffset.y) + 'px'\n        }\n      })\n    }\n    // copy properties from an object to another\n    DragDropTouch.prototype._copyProps = function (dst, src, props) {\n      for (let i = 0; i < props.length; i++) {\n        const p = props[i]\n        dst[p] = src[p]\n      }\n    }\n    DragDropTouch.prototype._copyStyle = function (src, dst) {\n      // remove potentially troublesome attributes\n      DragDropTouch._rmvAtts.forEach(function (att) {\n        dst.removeAttribute(att)\n      })\n      // copy canvas content\n      if (src instanceof window.HTMLCanvasElement) {\n        const cSrc = src\n        const cDst = dst\n        cDst.width = cSrc.width\n        cDst.height = cSrc.height\n        cDst.getContext('2d').drawImage(cSrc, 0, 0)\n      }\n      // copy style (without transitions)\n      const cs = window.getComputedStyle(src)\n      for (let i = 0; i < cs.length; i++) {\n        const key = cs[i]\n        if (key.indexOf('transition') < 0) {\n          dst.style[key] = cs[key]\n        }\n      }\n      dst.style.pointerEvents = 'none'\n      // and repeat for all children\n      for (let i = 0; i < src.children.length; i++) {\n        this._copyStyle(src.children[i], dst.children[i])\n      }\n    }\n    DragDropTouch.prototype._dispatchEvent = function (e, type, target) {\n      if (e && target) {\n        const evt = document.createEvent('Event')\n        const t = e.touches ? e.touches[0] : e\n        evt.initEvent(type, true, true)\n        evt.button = 0\n        evt.which = evt.buttons = 1\n        this._copyProps(evt, e, DragDropTouch._kbdProps)\n        this._copyProps(evt, t, DragDropTouch._ptProps)\n        evt.dataTransfer = this._dataTransfer\n        target.dispatchEvent(evt)\n        return evt.defaultPrevented\n      }\n      return false\n    }\n    // gets an element's closest draggable ancestor\n    DragDropTouch.prototype._closestDraggable = function (e) {\n      for (; e; e = e.parentElement) {\n        if (e.hasAttribute('draggable') && e.draggable) {\n          return e\n        }\n      }\n      return null\n    }\n    return DragDropTouch\n  })()\n  /* private */\n  DragDropTouch._instance = new DragDropTouch() // singleton\n  // constants\n  DragDropTouch._THRESHOLD = 5 // pixels to move before drag starts\n  DragDropTouch._OPACITY = 0.5 // drag image opacity\n  DragDropTouch._DBLCLICK = 500 // max ms between clicks in a double click\n  DragDropTouch._CTXMENU = 900 // ms to hold before raising 'contextmenu' event\n  DragDropTouch._ISPRESSHOLDMODE = false // decides of press & hold mode presence\n  DragDropTouch._PRESSHOLDAWAIT = 400 // ms to wait before press & hold is detected\n  DragDropTouch._PRESSHOLDMARGIN = 25 // pixels that finger might shiver while pressing\n  DragDropTouch._PRESSHOLDTHRESHOLD = 0 // pixels to move before drag starts\n  // copy styles/attributes from drag source to drag image element\n  DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',')\n  // synthesize and dispatch an event\n  // returns true if the event has been handled (e.preventDefault == true)\n  DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',')\n  DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY,offsetX,offsetY'.split(',')\n  DragDropTouch_1.DragDropTouch = DragDropTouch\n})({})\n","import React from 'react'\n\nconst Sortable = ({ children, onReorder }) => {\n  let container = null\n  let dragging = null\n  let currentOrder = null\n\n  const dragStart = (ev) => {\n    dragging = ev.target\n    dragging.classList.add('dragging')\n    const items = container.querySelectorAll('.sortable-item')\n    currentOrder = Array.from(items).map((elem) => elem.dataset.key)\n  }\n\n  const dragEnd = (ev) => {\n    if (!dragging) {\n      return\n    }\n    dragging.classList.remove('dragging')\n    dragging = null\n    const items = container.querySelectorAll('.sortable-item')\n    const newOrder = Array.from(items).map((elem) => elem.dataset.key)\n    if (onReorder) {\n      for (let i = 0; i < newOrder.length; i++) {\n        if (newOrder[i] !== currentOrder[i]) {\n          onReorder(newOrder)\n          currentOrder = newOrder\n          return\n        }\n      }\n    }\n  }\n\n  const dragOver = (ev) => {\n    ev.preventDefault()\n    const afterElement = getAfterElement(ev.clientY)\n    if (afterElement) {\n      container.insertBefore(dragging, afterElement)\n    } else {\n      container.appendChild(dragging)\n    }\n  }\n\n  const getAfterElement = (y) => {\n    const items = Array.from(container.querySelectorAll('.sortable-item:not(.dragging)'))\n\n    return items.reduce(\n      (closest, element) => {\n        const box = element.getBoundingClientRect()\n        const offset = y - box.top - box.height / 2\n        if (offset < 0 && offset > closest.offset) {\n          return { offset, element }\n        } else {\n          return closest\n        }\n      },\n      {\n        offset: Number.NEGATIVE_INFINITY\n      }\n    ).element\n  }\n\n  return (\n    <div ref={(ref) => (container = ref)} className=\"sortable-container\" onDragOver={dragOver}>\n      {React.Children.map(children, (child) => (\n        <SortableItem orderKey={child.key} dragStart={dragStart} dragEnd={dragEnd}>\n          {child}\n        </SortableItem>\n      ))}\n    </div>\n  )\n}\n\nconst SortableItem = ({ children, orderKey, dragStart, dragEnd }) => {\n  return (\n    <div\n      className=\"sortable-item\"\n      onDragStart={dragStart}\n      onDragEnd={dragEnd}\n      onTouchStart={dragStart}\n      onTouchEnd={dragEnd}\n      data-key={orderKey}\n      draggable\n    >\n      {children}\n    </div>\n  )\n}\n\nexport { Sortable }\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst Accordion = ({ children, multi }) => {\n  const [active, setActive] = useState(null)\n\n  return (\n    <div className='accordion'>\n      {React.Children.map(children, (child, idx) => {\n        const closed = active !== idx\n        return React.cloneElement(child, { idx, multi, closed, setActive })\n      })}\n    </div>\n  )\n}\n\nconst AccordionItem = ({ children, multi, title, idx, closed, setActive }) => {\n  const [open, setOpen] = useState(true)\n  const originalHeight = useRef()\n  let contentDiv = {}\n\n  useEffect(() => {\n    originalHeight.current = contentDiv.offsetHeight\n    setOpen(false)\n  }, [contentDiv.offsetHeight])\n\n  useEffect(() => setOpen(!closed), [closed])\n\n  const contentStyle = {}\n  const itemStyle = { visibility: 'hidden' }\n\n  if (originalHeight.current) {\n    contentStyle.maxHeight = open ? originalHeight.current : 0\n    itemStyle.visibility = 'visible'\n  }\n\n  const handleActive = (ev) => {\n    setActive(closed ? idx : null)\n  }\n\n  return (\n    <div className='accordion-item' style={itemStyle}>\n      <div className='accordion-title' onClick={handleActive}>\n        <div>{title}</div>\n        <i className={open ? 'open' : ''}></i>\n      </div>\n      <div\n        ref={(ref) => (contentDiv = ref)}\n        className='accordion-content'\n        style={contentStyle}\n      >\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport { Accordion, AccordionItem }\n","import React from 'react'\nimport './sortable.scss'\n\nimport { Sortable } from 'react-ui'\n\nconst SortableExample = () => {\n  const onReorder = (order) => {\n    console.log('onReorder', order)\n  }\n  return (\n    <div className='container'>\n      <h1>Sortable</h1>\n      <Sortable onReorder={onReorder}>\n        {ITEMS.map((item) => (\n          <div key={item.id} className='item'>\n            {item.label}\n          </div>\n        ))}\n      </Sortable>\n    </div>\n  )\n}\n\nconst ITEMS = [\n  { label: 'Item 1', id: '322342' },\n  { label: 'Item 2', id: '23423' },\n  { label: 'Item 3', id: '345345' },\n  { label: 'Item 4', id: '3242342' },\n  { label: 'Item 5', id: '8687686' },\n  { label: 'Item 6', id: '67576576' }\n]\n\nexport default SortableExample\n","import React from 'react'\nimport { Accordion, AccordionItem } from 'react-ui'\nimport './accordion.scss'\n\nconst AccordionExample = () => {\n  return (\n    <div className='container'>\n      <div className='accordion-container'>\n        <h1>Accordion</h1>\n        <Accordion arrow={() => <>&#8595;</>}>\n          <AccordionItem title='Item 1'>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\n            </p>\n          </AccordionItem>\n          <AccordionItem title='Item 2'>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\n            </p>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\n            </p>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\n            </p>\n          </AccordionItem>\n          <AccordionItem title='Item 3'>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\n            </p>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\n            </p>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\n            </p>\n          </AccordionItem>\n          <AccordionItem title='Item 4'>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\n            </p>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\n            </p>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\n            </p>\n          </AccordionItem>\n        </Accordion>\n      </div>\n    </div>\n  )\n}\n\nexport default AccordionExample\n","import React from 'react'\nimport 'react-ui/dist/index.css'\nimport './App.scss'\nimport Sortable from './Examples/Sortable'\nimport Accordion from './Examples/Accordion'\n\nconst App = () => {\n  return (\n    <>\n      <div className='example'>\n        <Sortable />\n      </div>\n      <div className='example'>\n        <Accordion />\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}